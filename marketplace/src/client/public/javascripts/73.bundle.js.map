{"version":3,"sources":["webpack:///./src/shared/containers/back-office/subscriptions/subscriptions.js"],"names":["subscriptions","oSubscriptions","props","user","subscriptionsUrl","tenant","dispatch","params","query","Action","all","then","resolve","actions","Seo","set","type","data","action","stateToProps","state","get","toJS","_components","default","TenantProxy"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;KAEMA,a;;;;;;;;;;;8BAqBK;AACP,WAAMC,iBAAkB;AAAA;AAAA,WAAM,WAAU,wBAAhB;AAAyC;AAAA;AAAA;AAAA;AAAA;AAAzC,QAAxB;;AAEA,WAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,gBAApB,EAAsC;AACpC;AACD;;AAED,cACE;AAAA;AAAA;AACGH;AADH,QADF;AAMD;;;;AAjCD;;;;;;;+BAOiBI,M,EAAQC,Q,EAAmC;AAAA,WAAzBC,MAAyB,uEAAhB,EAAgB;AAAA,WAAZC,KAAY,uEAAJ,EAAI;;AAC1D,WAAMC,SAAS,sBAAYJ,MAAZ,CAAf;AACA,cAAO,mBAAQK,GAAR,CAAY;AACjB;AADiB,QAAZ,EAGJC,IAHI,CAGC;AAAA,gBAAW,mBAAQC,OAAR,CAAgBC,OAAhB,CAAX;AAAA,QAHD,EAIJF,IAJI,CAIC;AAAA,gBAAMF,OAAOK,GAAP,CAAWC,GAAX,CAAe;AACzBC,iBAAM,EADmB;AAEzBC,iBAAM;AAFmB,UAAf,CAAN;AAAA,QAJD,EAQJN,IARI,CAQC;AAAA,gBAAU,mBAAQC,OAAR,CAAgBN,SAASY,MAAT,CAAhB,CAAV;AAAA,QARD,CAAP;AASD;;;;;;AAkBH,UAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,UAAO;AACLf,aAAQe,MAAMC,GAAN,CAAU,QAAV,CADH;AAELlB,WAAMiB,MAAMC,GAAN,CAAU,KAAV,EAAiBA,GAAjB,CAAqB,QAArB,EAA+BA,GAA/B,CAAmC,MAAnC,EAA2CC,IAA3C;AAFD,IAAP;AAID;;AAED,KAAMC,cAAc;AAClBC,YAAS,uBAAQL,YAAR,EAAsBnB,aAAtB;AADS,EAApB;;KAIqByB,W;;;;;;;yBACRpB,M,EAAQ;AACjB,cAAOkB,YAAYlB,MAAZ,IAAsBkB,YAAYlB,MAAZ,CAAtB,GAA4CkB,YAAYC,OAA/D;AACD;;;;;;mBAHkBC,W","file":"javascripts/73.bundle.js","sourcesContent":["import React from 'react';\nimport Components from 'components';\nimport connect from 'react-redux/lib/components/connect';\nimport Promise from 'bluebird';\nimport Actions from 'flux/actions';\n\nclass subscriptions extends Components {\n  /*\n   * @param tenant\n   * @param dispatch\n   * @param params\n   * @param query\n   * @returns {Promise|Promise.<T>}\n   */\n  static fetchData(tenant, dispatch, params = {}, query = {}) {\n    const Action = new Actions(tenant);\n    return Promise.all([\n      // Insert here the Action to fetch the needed data\n    ])\n      .then(actions => Promise.resolve(actions))\n      .then(() => Action.Seo.set({\n        type: '',\n        data: {},\n      }))\n      .then(action => Promise.resolve(dispatch(action)));\n  }\n\n  render() {\n    const oSubscriptions = (<span className=\"centered-message-title\"><h2>Pas d'abonnement disponibles</h2></span>);\n\n    if (this.props.user.subscriptionsUrl) {\n      // oSubscriptions = (<iframe src={this.props.user.subscriptionsUrl} className=\"billing-system-offers-bo\" scrolling=\"no\"></iframe>)\n    }\n\n    return (\n      <div>\n        {oSubscriptions}\n      </div>\n\n    );\n  }\n}\n\nfunction stateToProps(state) {\n  return {\n    tenant: state.get('tenant'),\n    user: state.get('v02').get('common').get('user').toJS(),\n  };\n}\n\nconst _components = {\n  default: connect(stateToProps)(subscriptions),\n};\n\nexport default class TenantProxy {\n  static get(tenant) {\n    return _components[tenant] ? _components[tenant] : _components.default;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/containers/back-office/subscriptions/subscriptions.js"],"sourceRoot":""}